Anotações Importante Git e GitHub
Git - é um sistema de controle de versão de arquivos. Através deles podemos desenvolver projetos
na qual diversas pessoas podem contribuir simultaneamente no mesmo, editando e criando novos arquivos
e permitindo que os mesmos possam existir sem o risco de suas alterações serem sobrescritas.

GitHub - é um serviço de hospedagem na Web para repositórios git, como os usados para armazenar conteúdo
do docs.microsoft.com. Para qualquer projeto, o GitHub hospeda o repositório principal, do qual os colaboradores
podem fazer cópias para seus próprios trabalhos.

Sha1 - A sigla SHA significa Secure Hash Algorithm (Algoritmo de Hash Seguro), é um conjunto de funções
hash criptográficas projetadas pela NSA (Agência de Segurança Nacional dos EUA). A Encriptação gera um
conjunto de characteres identificador de 40 digitos.
é uma forma curta de representar um arquivo

EX: f9fc856e559b950175f2b7cd7dad61facbe58e7b
 
OBJETOS FUNDAMENTAIS DO GIT (Blobs, Tree e Commit)

Blobs - Bloco básico da composição de um arquivo, amarzena o Sha, o tipo e tamanho de um arquivo dentro de sí

Tree - Responsável por montar as estruturas de onde estão localizados os arquivos, Armazena os Blobs dentro de sí, 
aponta para tipos de Blobs diferentes ou mesmo para outras árvores, guarda nome do arquivo

Commit - O comando git commit captura um instantâneo das mudanças preparadas do projeto no momento. Os instantâneos
com commit podem ser considerados versões "seguras" de um projeto, o Git nunca os altera, a menos que você peça a ele.

Chave SSH - você pode conectar-se a GitHub sem inserir seu nome de usuário e token de acesso pessoal em cada visita.
Ao configurar o SSH, você precisará gerar uma nova chave SSH e adicioná-la ao agente ssh. Você deve adicionar a chave SSH
à sua conta GitHub antes de usar a chave para efetuar a autenticação.

Tokens de acesso pessoal - são uma alternativa para o uso de senhas para autenticação no GitHub ao usar a API do GitHub ou
a linha de comando.

O que ocasionam conflitos no Github?
um conflito de merge no Git ocorre quando dois desenvolvedores alteram o mesmo trecho de código e a única maneira
de resolver este conflito é através de uma intervenção manual, al